---
- hosts: localhost 
  vars:
    project_repo: git://github.com/semanticbits/survey_stats
    project_location: /opt/survey_stats
    program_name: survey_stats
    conda_env: survey_env
    conda_env_file: conda_env.yml
    supervisord_configs_path: /etc/supervisor/conf.d
  roles:
    - role: andrewrothstein.conda-env
      conda_env_name: "{{ conda_env }}"
      conda_env_environment: "{{ project_location }}/{{ conda_env_file }}"
      conda_env_cleanup: True
      conda_env_activate_for_login_shell: True
      conda_env_addl_pkgs:
        - c: intel
        - c: intel/label/test
      tags:
        condaenv
    - role: jdauphant.nginx
      nginx_error_log_level: info
      nginx_http_params:
        - sendfile on
        - access_log /var/log/nginx/access.log
      nginx_sites:
        stats:
           - listen 7777
           - server_name _
           - root "{{ project_location }}/static";
           - location / {
                proxy_pass http://stats_service;
                proxy_cache $stats_cache;
                proxy_http_version 1.1;
                proxy_set_header X-Forwarded-For $remote_addr;
                if ($uri != '/') {
                    expires 30d;
                } 
            }
      nginx_configs:
        proxy:
          - proxy_set_header X-Real-IP  $remote_addr
          - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for
          - proxy_set_header Host $http_host
          - proxy_redirect off
          - proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=stats_cache:10m max_size=10g inactive=60m use_temp_path=off
        upstream:
          - upstream stats_service { server localhost:7778 fail_timeout=0; }
    - role: supervisor
  tasks:
    - name: Clone project code.
      git:
        repo: "{{ project_repo }}"
        dest: "{{ project_location }}"
        update: yes
      tags:
        git
    - name: Create Conda environment from project environment file.
      command: "sh bootstrap.sh"
      args:
        chdir: "{{ project_location }}"
      tags:
        conda
    - name: Copy supervisord server job file to remote
      template:
        src: ./templates/run_server.j2
        dest: "{{ supervisord_configs_path }}/run_server.conf"
        owner: root
      tags:
        conf
    - name: Copy supervisord worker job file to remote
      template:
        src: ./templates/run_worker.j2
        dest: "{{ supervisord_configs_path }}/run_worker.conf"
        owner: root
      tags:
        conf
    - name: Start server
      supervisorctl:
        name: "stats_server"
        state: present
      tags:
        conf
    - name: Start worker
      supervisorctl:
        name: "stats_worker"
        state: present
      tags:
        conf
